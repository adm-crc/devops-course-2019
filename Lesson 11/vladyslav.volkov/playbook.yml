- hosts: all
  become: true

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Copy config file to client
      copy:
        src: ./hello.conf
        dest: /tmp/

    - name: Copy index.html to client
      copy:
        src: ./index.html
        dest: /tmp/

    - name: Start Nginx container
      docker_container:
        name: nginx
        image: nginx
        state: started
        ports:
         - "8080:80"

    - name: Copy config file into container
      shell: docker cp /tmp/hello.conf nginx:/etc/nginx/conf.d/default.conf

    - name: Copy index.html into container
      shell: docker cp /tmp/index.html nginx:/usr/share/nginx/html

    - name: Reload nginx
      shell: docker container exec nginx  nginx -s reload




#    - name: Pull default Docker image
#      docker_image:
#        name: "{{ default_container_image }}"
#        source: pull
#    # Creates the number of containers defined by the variable create_containers, using values from vars file
#    - name: Create default containers
#      docker_container:
#        name: "{{ default_container_name }}{{ item }}"
#        image: "{{ default_container_image }}"
#        command: "{{ default_container_command }}"
#        state: present
#      with_sequence: count={{ create_containers }}